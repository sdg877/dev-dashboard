{"ast":null,"code":"import { GraphQLClient } from '../classes/GraphQLClient.js';\n/**\n * Send a GraphQL Query to the GraphQL server for execution.\n */\nexport const rawRequest = async (...args) => {\n  const [urlOrOptions, query, ...variablesAndRequestHeaders] = args;\n  const requestOptions = parseRawRequestExtendedArgs(urlOrOptions, query, ...variablesAndRequestHeaders);\n  const client = new GraphQLClient(requestOptions.url);\n  return client.rawRequest({\n    ...requestOptions\n  });\n};\nexport const parseRawRequestExtendedArgs = (urlOrOptions, query, ...variablesAndRequestHeaders) => {\n  const [variables, requestHeaders] = variablesAndRequestHeaders;\n  return typeof urlOrOptions === `string` ? {\n    url: urlOrOptions,\n    query: query,\n    variables,\n    requestHeaders,\n    signal: undefined\n  } : urlOrOptions;\n};\nexport const parseRawRequestArgs = (queryOrOptions, variables, requestHeaders) => {\n  return queryOrOptions.query ? queryOrOptions : {\n    query: queryOrOptions,\n    variables: variables,\n    requestHeaders: requestHeaders,\n    signal: undefined\n  };\n};","map":{"version":3,"names":["GraphQLClient","rawRequest","args","urlOrOptions","query","variablesAndRequestHeaders","requestOptions","parseRawRequestExtendedArgs","client","url","variables","requestHeaders","signal","undefined","parseRawRequestArgs","queryOrOptions"],"sources":["/Users/sylviadrake-gill/code/dev-dashboard/client/node_modules/graphql-request/src/legacy/functions/rawRequest.ts"],"sourcesContent":["import { GraphQLClient } from '../classes/GraphQLClient.js'\nimport type {\n  GraphQLClientResponse,\n  RawRequestOptions,\n  Variables,\n  VariablesAndRequestHeadersArgs,\n} from '../helpers/types.js'\n\n/**\n * Send a GraphQL Query to the GraphQL server for execution.\n */\nexport const rawRequest: RawRequest = async <T, V extends Variables>(\n  ...args: RawRequestArgs<V>\n): Promise<GraphQLClientResponse<T>> => {\n  const [urlOrOptions, query, ...variablesAndRequestHeaders] = args\n  const requestOptions = parseRawRequestExtendedArgs<V>(urlOrOptions, query, ...variablesAndRequestHeaders)\n  const client = new GraphQLClient(requestOptions.url)\n  return client.rawRequest<T, V>({\n    ...requestOptions,\n  })\n}\n\n// dprint-ignore\ninterface RawRequest {\n  <T, V extends Variables = Variables>(url: string, query: string, ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>): Promise<GraphQLClientResponse<T>>\n  <T, V extends Variables = Variables>(options: RawRequestExtendedOptions<V>): Promise<GraphQLClientResponse<T>>\n}\n\n// dprint-ignore\ntype RawRequestArgs<V extends Variables> = \n  | [options: RawRequestExtendedOptions<V>, query?: string, ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>]\n  | [url: string,                           query?: string, ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>]\n\nexport const parseRawRequestExtendedArgs = <V extends Variables = Variables>(\n  urlOrOptions: string | RawRequestExtendedOptions<V>,\n  query?: string,\n  ...variablesAndRequestHeaders: VariablesAndRequestHeadersArgs<V>\n): RawRequestExtendedOptions<V> => {\n  const [variables, requestHeaders] = variablesAndRequestHeaders\n  return typeof urlOrOptions === `string`\n    ? ({\n      url: urlOrOptions,\n      query: query as string,\n      variables,\n      requestHeaders,\n      signal: undefined,\n    } as unknown as RawRequestExtendedOptions<V>)\n    : urlOrOptions\n}\n\nexport type RawRequestExtendedOptions<V extends Variables = Variables> = {\n  url: string\n} & RawRequestOptions<V>\n\nexport const parseRawRequestArgs = <V extends Variables = Variables>(\n  queryOrOptions: string | RawRequestOptions<V>,\n  variables?: V,\n  requestHeaders?: HeadersInit,\n): RawRequestOptions<V> => {\n  return (queryOrOptions as RawRequestOptions<V>).query\n    ? (queryOrOptions as RawRequestOptions<V>)\n    : ({\n      query: queryOrOptions as string,\n      variables: variables,\n      requestHeaders: requestHeaders,\n      signal: undefined,\n    } as unknown as RawRequestOptions<V>)\n}\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,6BAA6B;AAQ3D;;;AAGA,OAAO,MAAMC,UAAU,GAAe,MAAAA,CACpC,GAAGC,IAAuB,KACW;EACrC,MAAM,CAACC,YAAY,EAAEC,KAAK,EAAE,GAAGC,0BAA0B,CAAC,GAAGH,IAAI;EACjE,MAAMI,cAAc,GAAGC,2BAA2B,CAAIJ,YAAY,EAAEC,KAAK,EAAE,GAAGC,0BAA0B,CAAC;EACzG,MAAMG,MAAM,GAAG,IAAIR,aAAa,CAACM,cAAc,CAACG,GAAG,CAAC;EACpD,OAAOD,MAAM,CAACP,UAAU,CAAO;IAC7B,GAAGK;GACJ,CAAC;AACJ,CAAC;AAaD,OAAO,MAAMC,2BAA2B,GAAGA,CACzCJ,YAAmD,EACnDC,KAAc,EACd,GAAGC,0BAA6D,KAChC;EAChC,MAAM,CAACK,SAAS,EAAEC,cAAc,CAAC,GAAGN,0BAA0B;EAC9D,OAAO,OAAOF,YAAY,KAAK,QAAQ,GAClC;IACDM,GAAG,EAAEN,YAAY;IACjBC,KAAK,EAAEA,KAAe;IACtBM,SAAS;IACTC,cAAc;IACdC,MAAM,EAAEC;GACmC,GAC3CV,YAAY;AAClB,CAAC;AAMD,OAAO,MAAMW,mBAAmB,GAAGA,CACjCC,cAA6C,EAC7CL,SAAa,EACbC,cAA4B,KACJ;EACxB,OAAQI,cAAuC,CAACX,KAAK,GAChDW,cAAuC,GACvC;IACDX,KAAK,EAAEW,cAAwB;IAC/BL,SAAS,EAAEA,SAAS;IACpBC,cAAc,EAAEA,cAAc;IAC9BC,MAAM,EAAEC;GAC2B;AACzC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}